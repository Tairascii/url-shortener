// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package query

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const generateID = `-- name: GenerateID :one
insert into urls (id) values (nextval('url_id_manual_seq') + $1 + $2) returning id
`

type GenerateIDParams struct {
	Column1 interface{}
	Column2 interface{}
}

func (q *Queries) GenerateID(ctx context.Context, arg *GenerateIDParams) (int64, error) {
	row := q.db.QueryRow(ctx, generateID, arg.Column1, arg.Column2)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const getFullUrl = `-- name: GetFullUrl :one
select long_url from urls where short_url = $1
`

func (q *Queries) GetFullUrl(ctx context.Context, shortUrl pgtype.Text) (pgtype.Text, error) {
	row := q.db.QueryRow(ctx, getFullUrl, shortUrl)
	var long_url pgtype.Text
	err := row.Scan(&long_url)
	return long_url, err
}

const setUrl = `-- name: SetUrl :exec
update urls set long_url = $1, short_url = $2 where id = $3
`

type SetUrlParams struct {
	LongUrl  pgtype.Text
	ShortUrl pgtype.Text
	ID       int64
}

func (q *Queries) SetUrl(ctx context.Context, arg *SetUrlParams) error {
	_, err := q.db.Exec(ctx, setUrl, arg.LongUrl, arg.ShortUrl, arg.ID)
	return err
}
